1.tuple example1
namespace LearnCSharp
{
    internal class Program
    {
        public static (string, string) ToUpperAndLower(string input)
        {
            var upper = input.ToUpper();
            var lower = input.ToLower();
            return (upper, lower);
        }

        public static void Main()
        {
            var res = ToUpperAndLower("Hello World");
            Console.WriteLine(res.Item1);
            Console.WriteLine(res.Item2);
        }
    }
}


**********************************************************************************************************
2.tuple example 2

internal class Program
{
    public static (string Upper, string Lower) ToUpperAndLower(string input)
    {
        var upper = input.ToUpper();
        var lower = input.ToLower();
        return (upper, lower);
    }

    public static void Main()
    {
        var res = ToUpperAndLower("Hello World");
        Console.WriteLine(res.Upper);
        Console.WriteLine(res.Lower);
    }
}

**********************************************************************************************************
3.foreach example using array

internal class Program
{
    public static void Main()
    {
        var arr = new int[] { 1, 4, 5, 6, 8 };

        // Uncomment this block if you want to use a for loop instead
        // for (int i = 0; i < arr.Length; i++)
        // {
        //     Console.WriteLine(arr[i]);
        // }

        foreach (var item in arr)
        {
            Console.WriteLine(item);
        }
    }
}

**********************************************************************************************************
4.foreach example2 using string

internal class Program
{
    public static void Main()
    {
         var arr = new string[] { "girish", "rahul" };

        foreach (var words in arr)
 	 {
      	Console.WriteLine(words.ToUpper());
  	}
    }
}

***********************************************************************
5.storing marks of 3 student using tuple and used for each

using System;

class Program
{
    static void Main()
    {
        var studentMarks = new (int English, int Malayalam, int Physics)[]
        {
            (80, 70, 90), 
            (90, 80, 70), 
            (70, 90, 80), 
            (85, 75, 95),
            (95, 85, 75)
        };

        foreach (var marks in studentMarks)
        {
            Console.WriteLine($"English: {marks.English}");
            Console.WriteLine($"Malayalam: {marks.Malayalam}");
            Console.WriteLine($"Physics: {marks.Physics}");
            Console.WriteLine(); // Add a line break for better readability
        }
    }
}

**************************************************************************
6.Exception handling example

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp3
{
    internal class Program4
    {
        static int Divide(int num1, int num2)
        {

            return num1 / num2;
        }
        static void Main()
        {
            try
            {
                Console.Write("Enter the first number: ");
                string input1 = Console.ReadLine();
                int number1 = int.Parse(input1);

                Console.Write("Enter the second number: ");
                string input2 = Console.ReadLine();
                int number2 = int.Parse(input2);

                int result = Divide(number1, number2);
                Console.WriteLine($"Result: {result}");
            }
            catch (FormatException)
            {
                throw new Exception();
               // Console.WriteLine("Error: Please enter valid integers.");
            }
            catch (DivideByZeroException)
            {
                Console.WriteLine("Error: Division by zero is not allowed.");
            }
            //catch (Exception ex)
            //{
            //    Console.WriteLine($"An unexpected error occurred: {ex.Message}");
            //}

            finally
            {
                 Console.WriteLine("final block with errors");

            }
            Console.WriteLine("final block");
        }
    }
    
}

**************************************************************************
